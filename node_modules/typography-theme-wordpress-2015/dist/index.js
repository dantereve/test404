"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _grayPercentage = require("gray-percentage");

var _grayPercentage2 = _interopRequireDefault(_grayPercentage);

var _typographyBreakpointConstants = require("typography-breakpoint-constants");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var theme = {
  title: "Wordpress Theme 2015",
  baseFontSize: "19px",
  baseLineHeight: 1.68,
  googleFonts: [{
    name: "Noto Serif",
    styles: ["400", "700"]
  }],
  headerFontFamily: ["Noto Serif", "serif"],
  bodyFontFamily: ["Noto Serif", "serif"],
  bodyColor: "hsla(0,0%,0%,0.8)",
  headerWeight: "700",
  bodyWeight: 400,
  boldWeight: 700,
  overrideStyles: function overrideStyles(_ref, options) {
    var adjustFontSizeTo = _ref.adjustFontSizeTo,
        scale = _ref.scale,
        rhythm = _ref.rhythm;
    return _defineProperty({
      "h5,h6": {
        letterSpacing: "0.1em",
        textTransform: "uppercase"
      },
      "h1,h2,h3,h4,h5,h6": {
        marginTop: rhythm(2)
      },
      ul: {
        listStyle: "disc"
      },
      "ul,ol": {
        marginLeft: 0
      },
      // children ol, ul
      "li>ol,li>ul": {
        marginLeft: rhythm(2 / 3),
        marginBottom: 0
      },
      // Blockquote.
      blockquote: _extends({}, scale(1 / 5), {
        color: (0, _grayPercentage2.default)(41),
        fontStyle: "italic",
        paddingLeft: rhythm(5 / 8),
        marginLeft: rhythm(-6 / 8),
        borderLeft: rhythm(1 / 8) + " solid rgba(51, 51, 51, 0.7)"
      }),
      "blockquote > :last-child": {
        marginBottom: 0
      },
      "blockquote cite": _extends({}, adjustFontSizeTo(options.baseFontSize), {
        color: options.bodyColor,
        fontStyle: "normal"
      }),
      "blockquote cite:before": {
        content: '"â€” "'
      }
    }, _typographyBreakpointConstants.MOBILE_MEDIA_QUERY, {
      "ul,ol": {
        marginLeft: rhythm(1)
      },
      blockquote: {
        marginLeft: rhythm(-3 / 4),
        marginRight: 0,
        paddingLeft: rhythm(9 / 16)
      }
    });
  }
};

exports.default = theme;